package screens{import starling.core.Starling;	import starling.display.Image;	import starling.display.Sprite;import starling.display.Sprite3D;import starling.events.Event;	import starling.events.Touch;	import starling.events.TouchPhase;	import starling.events.TouchEvent;	import starling.text.TextField;	import starling.textures.Texture;	import starling.animation.Juggler;	import starling.animation.Tween;	import starling.animation.Transitions;import starling.utils.Align;import starling.utils.Color;import utils.MenuButton;import utils.ScoreKeeper;	public class ScreenLose extends Scene	{		// set by incoming params		//private var _controller:ScreenManager;				private var _scoreKeeper:ScoreKeeper = ScoreKeeper.getInstance();				private var _logo:Image;		private var _yourscore:Image;		private var _highscore:Image;		private var _btnRestart:Image;		private var _btnMenu:Image;		private var _tf_score:TextField;		private var _tf_highscore:TextField;				private var _array_objects:Array = [];		private var _arrayBtns:Array = [];        private var resetButton:MenuButton;        public function ScreenLose() {            //super();            //launchSpaceShip();        }        override public function init(width:Number, height:Number):void		{			//_controller = data.controller;            super.init(width, height);						init_logo();			init_panel();			init_btn();			enable_btns();						_array_objects.push( _scoreKeeper );            Root.playCount = 1;            trace("Play Count ", Root.playCount);            if(Root.playCount % 3 == 0)                Root.admobManager.onLoadInterstitial();		}				public override function dispose():void        {			disable_btns();						removeChild( _logo, true );			removeChild(_yourscore, true);			removeChild(_highscore, true);			removeChild( _tf_score, true );			removeChild(_tf_highscore, true);            removeChild(resetButton, true);			kill_btns();						for each( var obj:* in _array_objects )obj = null;			            super.dispose();        }						// STARLING OBJECTS FUNCS ---------------------------------------------				private function init_logo():void		{			// set texture			var logoTexture:Texture = Root.assets.getTexture("gameover");			_logo = new Image( logoTexture );						_logo.x = Math.round( (stage.stageWidth - _logo.width)/2 );			var _logoPosYFinal:Number = stage.stageHeight / 9;			_logo.y = _logoPosYFinal - 60;			_logo.alpha = 0;					addChild( _logo );						// animate in			var tweenLogo:Tween = new Tween( _logo, 1, Transitions.EASE_OUT_BACK );			tweenLogo.animate("y", _logoPosYFinal);			tweenLogo.fadeTo(1);			Starling.juggler.add( tweenLogo );						_array_objects.push( _logo );		}				private function init_panel():void		{			var yourscoreTexture:Texture = Root.assets.getTexture("yourscore");			_yourscore = new Image(yourscoreTexture);			_yourscore.x = stage.stageWidth / 2 -_yourscore.width;			_yourscore.y = stage.stageHeight * 3 / 9;			addChild(_yourscore);			var highscoreTexture:Texture = Root.assets.getTexture("highscore");			_highscore = new Image(highscoreTexture);			_highscore.x = stage.stageWidth / 2 -_highscore.width;			_highscore.y = _yourscore.y + _yourscore.height * 2;			addChild(_highscore);            _tf_score = new TextField(yourscoreTexture.width, yourscoreTexture.height * yourscoreTexture.scale, String(_scoreKeeper.score));            _tf_score.format.setTo(Constants.DEFAULT_FONT, 12, 0xc9d3d2);            _tf_score.format.bold = true;            _tf_score.format.horizontalAlign = Align.RIGHT;			_tf_score.x = stage.stageWidth / 2;			_tf_score.y = _yourscore.y;			addChild( _tf_score );            _tf_highscore = new TextField(yourscoreTexture.width, yourscoreTexture.height * yourscoreTexture.scale, String(_scoreKeeper.highScore));            _tf_highscore.format.setTo(Constants.DEFAULT_FONT, 12, 0xc9d3d2);            _tf_highscore.format.bold = true;            _tf_highscore.format.horizontalAlign = Align.RIGHT;			_tf_highscore.x = stage.stageWidth / 2;			_tf_highscore.y = _highscore.y;			addChild( _tf_highscore );            resetButton = new MenuButton("Reset Your Score", 120, 28);            resetButton.textFormat.setTo("Ubuntu", 12);            resetButton.addEventListener(starling.events.Event.TRIGGERED, onButtonTriggered);            addChild(resetButton);            resetButton.alignPivot();            resetButton.x = stage.stageWidth >> 1;            resetButton.y = Math.round( stage.stageHeight * 8 / 9);						_array_objects.push( _yourscore, _highscore, _tf_score );		}        private function onButtonTriggered(event:starling.events.Event):void        {            trace("Reset Button Triggered");            _scoreKeeper.resetLocalData();            _tf_score.text = String(_scoreKeeper.score);            _tf_highscore.text = String(_scoreKeeper.highScore);        }        private function init_btn():void		{			var _btnPanel:Sprite = new Sprite();			addChild(_btnPanel);			// set texture			var btnRestartTexture:Texture = Root.assets.getTexture("restart");			_btnRestart = new Image( btnRestartTexture );			_btnPanel.addChild(_btnRestart);			var btnMenuTexture:Texture = Root.assets.getTexture("menu");			_btnMenu = new Image( btnMenuTexture );			_btnMenu.x = (_btnRestart.width - _btnMenu.width) >> 1;			_btnMenu.y = _btnRestart.height * 2;			_btnPanel.addChild(_btnMenu);			_btnPanel.x = Math.round( (stage.stageWidth - _btnPanel.width) >> 1 );			var _btnPosYFinal:int = Math.round( stage.stageHeight * 5 / 9);			_btnPanel.y = _btnPosYFinal - 60;			_btnPanel.alpha = 0;						// animate in			var tweenBtn:Tween = new Tween( _btnPanel, 1, Transitions.EASE_OUT_BACK );			tweenBtn.animate("y", _btnPosYFinal);			tweenBtn.fadeTo(1);			tweenBtn.delay = 0.5;            tweenBtn.onComplete =                    function():void                    {                        //_controller.setupInterstitial();                    };			Starling.juggler.add( tweenBtn );						_array_objects.push( _btnPanel );		}						// BTN FUNCS ---------------------------------------------				private function onTouched( event:TouchEvent ):void		{			var touch:Touch = Touch( event.getTouch( stage ) );			var _btnClicked:Image = Image( event.currentTarget );			if ( touch.phase == TouchPhase.ENDED )			{				switch (_btnClicked)				{					case _btnMenu:                        dispatchEventWith(Menu.HOME_SCREEN, true);						//_controller.change_screen( {screenRequest:Constants.REQUEST_HOME} );						break;					case _btnRestart:                        dispatchEventWith(Menu.SPACE_SHIP, true);						//_controller.change_screen( {screenRequest:Constants.REQUEST_GAME_PLAY} );						break;				}			}		}		private function enable_btns():void		{			_arrayBtns = [ _btnRestart, _btnMenu];			for each( var btn:Image in _arrayBtns )			{				btn.addEventListener( TouchEvent.TOUCH, onTouched );			}		}		private function disable_btns():void		{			for each( var btn:Image in _arrayBtns )			{				btn.removeEventListener( TouchEvent.TOUCH, onTouched );			}            resetButton.removeEventListener(starling.events.Event.TRIGGERED, onButtonTriggered);		}		private function kill_btns():void		{			for each( var btn:Image in _arrayBtns )			{				removeChild( btn, true );				btn = null;			}			_arrayBtns = [];		}	}	}