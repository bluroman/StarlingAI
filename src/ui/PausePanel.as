// Note: this class has to be outside of the Starling Framework because we are pausing the Framework when this panel is activepackage ui{		import starling.display.Image;	import starling.display.Sprite;	import starling.events.Event;	import starling.events.Touch;	import starling.events.TouchEvent;	import starling.events.TouchPhase;	import starling.utils.Color;		public class PausePanel extends Sprite	{		private var _gameScope:Object;				// objects on stage		public var panelOverlay:Image;		public var panelPaused:Image;		//public var panelOverlay:MovieClip		//public var panelPaused:MovieClip;				//private var _myTweenPosY:Tween;		//private var _myTweenAlpha:Tween;						public function PausePanel()		{			addEventListener( Event.ADDED_TO_STAGE, onAddedToStage );		}						// INIT/KILL FUNCS ---------------------------------------------				private function onAddedToStage( event:Event ):void		{			removeEventListener( Event.ADDED_TO_STAGE, onAddedToStage );						panelOverlay = new Image(Root.assets.getTexture("panelOverlay"));            panelOverlay.scaleX = stage.stageWidth / panelOverlay.width;            panelOverlay.scaleY = stage.stageHeight / panelOverlay.height;			addChild(panelOverlay);			panelPaused = new Image(Root.assets.getTexture("paused"));			addChild(panelPaused);						// setup			//panelPaused.scaleX = panelPaused.scaleY = (stage.stageWidth - 150) / panelPaused.width;			panelPaused.x = Math.round( (stage.stageWidth - panelPaused.width)/2 );			panelPaused.y = Math.round( (stage.stageHeight - panelPaused.height)/2 );						this.addEventListener( TouchEvent.TOUCH, onTouched);			//this.touchable = false;			//this.mouseChildren = false;			//this.buttonMode = true;		}				public function kill():void		{			this.removeEventListener( TouchEvent.TOUCH, onTouched );						_gameScope = null;		}		public override function dispose():void		{			removeChild(panelPaused, true);			removeChild(panelOverlay, true);			super .dispose();		}						// GETTERS/SETTERS ---------------------------------------------				public function set setGameScope( arg:Object ):void		{						_gameScope = arg;					}								// BTN FUNCS ---------------------------------------------				private function onTouched( event:TouchEvent ):void		{			var touch:Touch = Touch( event.getTouch( stage ) );			if ( touch && touch.phase == TouchPhase.ENDED )			{				_gameScope.resumeGame();				}		}	}	}